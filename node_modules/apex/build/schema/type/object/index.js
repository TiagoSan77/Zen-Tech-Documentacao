"use strict";

var _schema = require("../../schema");

_schema.Schema.Type.object = {
  getPath: (schema, value, path) => {
    const [key, ...rest] = path;
    return _schema.Schema.getPath(schema.props[key], (value || {})[key], rest);
  },
  get: (schema, data, path) => {
    const [key, ...rest] = path;
    return _schema.Schema.get(schema.props[key], (data || {})[key], rest);
  },
  set: (schema, data, path, value) => {
    const [key, ...rest] = path;
    return { ...data,
      [key]: _schema.Schema.set(schema.props[key], (data || {})[key], rest, value)
    };
  },
  validate: {
    props: (props, data) => {
      return Object.keys(props).reduce((out, key) => {
        _schema.Schema.validate(props[key], data[key]).forEach(({
          message,
          path = []
        }) => {
          out.push({
            path: [key, ...path],
            message
          });
        });

        return out;
      }, []);
    },
    validate: (validate, data) => validate(data)
  }
};
//# sourceMappingURL=index.js.map