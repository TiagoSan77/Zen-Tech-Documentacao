{"version":3,"sources":["../../../../src/schema/type/object/index.js"],"names":["Schema","Type","object","getPath","schema","value","path","key","rest","props","get","data","set","validate","Object","keys","reduce","out","forEach","message","push"],"mappings":";;AAAA;;AAGAA,eAAOC,IAAP,CAAYC,MAAZ,GAAqB;AACpBC,EAAAA,OAAO,EAAE,CAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,KAAyB;AACjC,UAAM,CAACC,GAAD,EAAM,GAAGC,IAAT,IAAiBF,IAAvB;AACA,WAAON,eAAOG,OAAP,CAAeC,MAAM,CAACK,KAAP,CAAaF,GAAb,CAAf,EAAkC,CAACF,KAAK,IAAI,EAAV,EAAcE,GAAd,CAAlC,EAAsDC,IAAtD,CAAP;AACA,GAJmB;AAKpBE,EAAAA,GAAG,EAAE,CAACN,MAAD,EAASO,IAAT,EAAeL,IAAf,KAAwB;AAC5B,UAAM,CAACC,GAAD,EAAM,GAAGC,IAAT,IAAiBF,IAAvB;AACA,WAAON,eAAOU,GAAP,CAAWN,MAAM,CAACK,KAAP,CAAaF,GAAb,CAAX,EAA8B,CAACI,IAAI,IAAI,EAAT,EAAaJ,GAAb,CAA9B,EAAiDC,IAAjD,CAAP;AACA,GARmB;AASpBI,EAAAA,GAAG,EAAE,CAACR,MAAD,EAASO,IAAT,EAAeL,IAAf,EAAqBD,KAArB,KAA+B;AACnC,UAAM,CAACE,GAAD,EAAM,GAAGC,IAAT,IAAiBF,IAAvB;AACA,WAAO,EACN,GAAGK,IADG;AAEN,OAACJ,GAAD,GAAOP,eAAOY,GAAP,CAAWR,MAAM,CAACK,KAAP,CAAaF,GAAb,CAAX,EAA8B,CAACI,IAAI,IAAI,EAAT,EAAaJ,GAAb,CAA9B,EAAiDC,IAAjD,EAAuDH,KAAvD;AAFD,KAAP;AAIA,GAfmB;AAgBpBQ,EAAAA,QAAQ,EAAE;AACTJ,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQE,IAAR,KAAiB;AACvB,aAAOG,MAAM,CACXC,IADK,CACAN,KADA,EAELO,MAFK,CAEE,CAACC,GAAD,EAAMV,GAAN,KAAc;AACrBP,uBACEa,QADF,CACWJ,KAAK,CAACF,GAAD,CADhB,EACuBI,IAAI,CAACJ,GAAD,CAD3B,EAEEW,OAFF,CAEU,CAAC;AAAEC,UAAAA,OAAF;AAAWb,UAAAA,IAAI,GAAG;AAAlB,SAAD,KAA4B;AACpCW,UAAAA,GAAG,CAACG,IAAJ,CAAS;AACRd,YAAAA,IAAI,EAAE,CAACC,GAAD,EAAM,GAAGD,IAAT,CADE;AAERa,YAAAA;AAFQ,WAAT;AAIA,SAPF;;AAQA,eAAOF,GAAP;AACA,OAZK,EAYH,EAZG,CAAP;AAaA,KAfQ;AAgBTJ,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWF,IAAX,KAAoBE,QAAQ,CAACF,IAAD;AAhB7B;AAhBU,CAArB","sourcesContent":["import { Schema } from '../../schema';\n\n\nSchema.Type.object = {\n\tgetPath: (schema, value, path) => {\n\t\tconst [key, ...rest] = path;\n\t\treturn Schema.getPath(schema.props[key], (value || {})[key], rest);\n\t},\n\tget: (schema, data, path) => {\n\t\tconst [key, ...rest] = path;\n\t\treturn Schema.get(schema.props[key], (data || {})[key], rest);\n\t},\n\tset: (schema, data, path, value) => {\n\t\tconst [key, ...rest] = path;\n\t\treturn {\n\t\t\t...data,\n\t\t\t[key]: Schema.set(schema.props[key], (data || {})[key], rest, value)\n\t\t};\n\t},\n\tvalidate: {\n\t\tprops: (props, data) => {\n\t\t\treturn Object\n\t\t\t\t.keys(props)\n\t\t\t\t.reduce((out, key) => {\n\t\t\t\t\tSchema\n\t\t\t\t\t\t.validate(props[key], data[key])\n\t\t\t\t\t\t.forEach(({ message, path = [] }) => {\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tpath: [key, ...path],\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\treturn out;\n\t\t\t\t}, []);\n\t\t},\n\t\tvalidate: (validate, data) => validate(data)\n\t}\n};\n\n\n"],"file":"index.js"}